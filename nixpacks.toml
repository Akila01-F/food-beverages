# Railway Deployment Configuration for Laravel + MongoDB + PostgreSQL
# Configures Nixpacks to install all required PHP extensions

[variables]
NODE_VERSION = "20"
PHP_VERSION = "8.2"

[phases.setup]
nixPkgs = [
    "php82", 
    "php82Packages.composer",
    "php82Extensions.mongodb",
    "php82Extensions.pdo_pgsql",
    "php82Extensions.pgsql", 
    "php82Extensions.mbstring",
    "php82Extensions.xml",
    "php82Extensions.zip",
    "php82Extensions.gd",
    "php82Extensions.curl",
    "php82Extensions.bcmath",
    "nodejs_20",
    "postgresql"
]

[phases.install] 
cmds = [
    # Verify PHP and extensions are available
    "php -v",
    "php -m | grep -E '(mongodb|pgsql)' || echo 'Extensions will be loaded at runtime'",
    # Install PHP dependencies (ignore platform requirements for MongoDB in case of issues)
    "composer install --ignore-platform-reqs --no-dev --optimize-autoloader --no-interaction",
    # Install Node dependencies
    "npm ci --only=production"
]

[phases.build]
cmds = [
    # Build frontend assets
    "npm run build",
    # Create required Laravel directories
    "mkdir -p storage/framework/sessions storage/framework/views storage/framework/cache storage/framework/testing storage/logs bootstrap/cache",
    # Set proper permissions
    "chmod -R 775 storage bootstrap/cache",
    # Optimize Laravel (skip if any fail)
    "php artisan config:cache || echo 'Config cache failed, continuing'",
    "php artisan route:cache || echo 'Route cache failed, continuing'", 
    "php artisan view:cache || echo 'View cache failed, continuing'"
]

[start]
cmd = "php artisan serve --host=0.0.0.0 --port=$PORT"